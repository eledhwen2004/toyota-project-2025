package com.main.entity;

import jakarta.persistence.*;
import org.hibernate.annotations.UpdateTimestamp;

import java.sql.Timestamp;
import java.time.Instant;

/**
 * JPA entity representing an exchange rate record stored in the "rates" table.
 * <p>
 * Each record stores the name of the rate, ask and bid values, the time the rate was last updated,
 * and the time the record was last updated in the database.
 */
@Entity
@Table(name = "rates")
public class RateEntity {

    /**
     * Primary key of the rate record. Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long id;

    /**
     * Name of the exchange rate (e.g., "USD/TRY").
     * This field is mandatory and immutable after insertion.
     */
    @Column(nullable = false, updatable = false)
    public String rateName;

    /**
     * Ask price of the rate (price to buy the base currency).
     * This field is mandatory and immutable after insertion.
     */
    @Column(nullable = false, updatable = false)
    public Double ask;

    /**
     * Bid price of the rate (price to sell the base currency).
     * This field is mandatory and immutable after insertion.
     */
    @Column(nullable = false, updatable = false)
    public Double bid;

    /**
     * Timestamp indicating when the rate was last updated externally (e.g., by a provider).
     * This field is mandatory and immutable after insertion.
     */
    @Column(nullable = false, updatable = false)
    public Instant rateUpdateTime;

    /**
     * Timestamp indicating when the record was last updated in the database.
     * Automatically managed by Hibernate.
     */
    @UpdateTimestamp
    @Column(nullable = false)
    public Timestamp dbUpdateTime;
}
