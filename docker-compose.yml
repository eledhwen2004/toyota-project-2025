version: "3.8"

services:
  db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: rate-api-postgres-db
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - logging-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - logging-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - logging-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - logging-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9201:9200"
    networks:
      - logging-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.1
    container_name: kibana
    ports:
      - "5602:5601"
    depends_on:
      - elasticsearch
    networks:
      - logging-network

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.12.1
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/var/log/mylogs:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - elasticsearch
    networks:
      - logging-network

  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - bootstrap.memory_lock=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=Aloha.32bit
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - logging-network

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    environment:
      - OPENSEARCH_HOSTS=["https://opensearch:9200"]
      - SERVER_HOST=0.0.0.0
      - OPENSEARCH_USERNAME=admin
      - OPENSEARCH_PASSWORD=Aloha.32bit
    ports:
      - "5601:5601"
    depends_on:
      - opensearch
    networks:
      - logging-network

  toyota-main-rate-api:
    build:
      context: ./toyota-main-rate-api
    container_name: toyota-main-rate-api
    ports:
      - "8083:8080"
    depends_on:
      - kafka
    volumes:
      - ./logs:/logs
    networks:
      - logging-network

  toyota-rest-rate-api-platform:
    build:
      context: ./toyota-rest-rate-api-platform
    container_name: toyota-rest-rate-api
    ports:
      - "8080:8080"
    networks:
      - logging-network

  toyota-tcp-rate-api-platform:
    build:
      context: ./toyota-tcp-rate-api-platform
    container_name: toyota-tcp-rate-api
    ports:
      - "8081:8081"
    networks:
      - logging-network

  kafka-consumer-application:
    build:
      context: ./kafka-consumer-application
    container_name: kafka-consumer
    depends_on:
      - kafka
      - db
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - logging-network

networks:
  logging-network:
    driver: bridge